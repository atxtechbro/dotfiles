#!/bin/bash
# Pre-commit hook to validate Claude command synchronization
# Principles: systems-stewardship, defensive-programming

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Get the repository root
REPO_ROOT="$(git rev-parse --show-toplevel)"
SYNC_SCRIPT="$REPO_ROOT/utils/sync-claude-commands.sh"

# Check if any command template files are being committed
if git diff --cached --name-only | grep -q ".claude/command-templates/.*\.md$"; then
    echo -e "${YELLOW}⚠${NC} Command templates modified, checking synchronization..."
    
    # Check if sync script exists
    if [[ ! -x "$SYNC_SCRIPT" ]]; then
        echo -e "${YELLOW}⚠${NC} Warning: sync-claude-commands.sh not found or not executable"
        echo "Skipping command sync validation"
        exit 0
    fi
    
    # Run sync check
    if ! "$SYNC_SCRIPT" --check > /dev/null 2>&1; then
        echo -e "${RED}✗${NC} Claude commands are out of sync!"
        echo
        "$SYNC_SCRIPT" --check
        echo
        echo "To fix this issue, run:"
        echo "  ./utils/generate-commands.sh"
        echo
        echo "Or to just clean orphaned commands:"
        echo "  ./utils/sync-claude-commands.sh --clean"
        echo
        echo "Then stage the changes and commit again."
        exit 1
    fi
    
    echo -e "${GREEN}✓${NC} Claude commands are synchronized"
fi

# Check if generate-commands.sh was modified
if git diff --cached --name-only | grep -q "utils/generate-commands.sh"; then
    echo -e "${YELLOW}⚠${NC} Command generator modified, regenerating commands..."
    
    # Run the generator to ensure consistency
    if [[ -x "$REPO_ROOT/utils/generate-commands.sh" ]]; then
        "$REPO_ROOT/utils/generate-commands.sh"
        echo -e "${GREEN}✓${NC} Commands regenerated successfully"
        echo
        echo "Note: If new command files were generated, you may need to:"
        echo "  git add ~/.claude/commands/*.md"
        echo "  git commit --amend"
    fi
fi

exit 0