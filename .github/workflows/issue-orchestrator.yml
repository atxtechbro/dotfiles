name: Issue Orchestrator
description: Orchestrate issue processing - triage, label, and auto-trigger Claude implementation
on:
  issues:
    types: [opened]

jobs:
  orchestrate-issue:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      issues: write
      id-token: write  # Required for OIDC authentication

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare prompt with issue details
        id: prepare-prompt
        run: |
          ISSUE_AUTO_LABEL="${{ github.workspace }}/.github/workflow-prompts/issue-triage.md"
          
          PROMPT_CONTENT=$(cat "$ISSUE_AUTO_LABEL" | \
            sed "s|{{ REPO }}|${{ github.repository }}|g" | \
            sed "s|{{ ISSUE_NUMBER }}|${{ github.event.issue.number }}|g")
          
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$PROMPT_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Setup GitHub MCP Server
        run: |
          mkdir -p /tmp/mcp-config
          cat > /tmp/mcp-config/mcp-servers.json << 'EOF'
          {
            "mcpServers": {
              "github": {
                "command": "node",
                "args": ["${{ github.workspace }}/mcp/servers/github-mcp-server/dist/index.js"],
                "env": {
                  "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
                }
              }
            }
          }
          EOF

      - name: Run Claude Code for Issue Triage
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt: ${{ steps.prepare-prompt.outputs.prompt }}
          allowed_tools: "Bash(gh label list),mcp__github-write__get_issue,mcp__github-write__get_issue_comments,mcp__github-write__update_issue,mcp__github-write__search_issues,mcp__github-write__list_issues"
          timeout_minutes: "5"
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          model: claude-sonnet-4-20250514
          mcp_config: /tmp/mcp-config/mcp-servers.json
          claude_env: |
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-trigger Claude implementation
        # Skip if: question label, no-auto-implement label, or title contains "?"
        if: |
          success() && 
          !contains(github.event.issue.labels.*.name, 'no-auto-implement') &&
          !contains(github.event.issue.labels.*.name, 'question') &&
          !contains(github.event.issue.title, '?')
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Wait 3 seconds to ensure labels from triage are applied
            await new Promise(resolve => setTimeout(resolve, 3000));
            
            // Get updated issue to check labels applied by triage
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            // Double-check skip conditions with updated labels
            const labels = issue.data.labels.map(l => l.name);
            if (labels.includes('no-auto-implement') || labels.includes('question')) {
              console.log('‚è≠Ô∏è Skipping auto-trigger due to labels: ' + labels.join(', '));
              return;
            }
            
            // Add comment to trigger Claude implementation workflow
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: '@claude Please implement this issue and create a PR.\n\n' +
                    '_Auto-triggered by OSE workflow for ultimate automation._\n\n' +
                    'Principles: **ose** (Outside and Slightly Elevated)'
            });
            
            console.log('üöÄ Successfully triggered Claude implementation for issue #' + context.issue.number);