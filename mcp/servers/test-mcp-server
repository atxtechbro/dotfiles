#!/bin/bash

# Simple test MCP server that responds to the test_hello tool
# This is a minimal implementation for testing purposes

# Read from stdin and write to stdout
while read -r line; do
  # Check if the line contains a JSON-RPC request
  if echo "$line" | grep -q "\"jsonrpc\":"; then
    # Extract the method and id
    method=$(echo "$line" | grep -o '"method":"[^"]*"' | cut -d'"' -f4)
    id=$(echo "$line" | grep -o '"id":[0-9]*' | cut -d':' -f2)
    
    # Handle the initialize method
    if [ "$method" = "initialize" ]; then
      echo "{\"jsonrpc\":\"2.0\",\"id\":$id,\"result\":{\"name\":\"test\",\"version\":\"1.0.0\",\"tools\":[{\"name\":\"test_hello\",\"description\":\"A simple test tool that says hello\",\"parameters\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"Name to greet\"}},\"required\":[\"name\"]}}]}}"
    
    # Handle the test_hello tool
    elif [ "$method" = "execute" ]; then
      # Extract the tool name and parameters
      tool=$(echo "$line" | grep -o '"name":"[^"]*"' | cut -d'"' -f4)
      
      if [ "$tool" = "test_hello" ]; then
        # Extract the name parameter
        name=$(echo "$line" | grep -o '"name":"[^"]*"' | cut -d'"' -f4 | head -1)
        
        # If no name was found, use a default
        if [ -z "$name" ]; then
          name="World"
        fi
        
        # Return the greeting
        echo "{\"jsonrpc\":\"2.0\",\"id\":$id,\"result\":{\"message\":\"Hello, $name!\"}}"
      else
        # Unknown tool
        echo "{\"jsonrpc\":\"2.0\",\"id\":$id,\"error\":{\"code\":-32601,\"message\":\"Tool not found: $tool\"}}"
      fi
    else
      # Unknown method
      echo "{\"jsonrpc\":\"2.0\",\"id\":$id,\"error\":{\"code\":-32601,\"message\":\"Method not found: $method\"}}"
    fi
  fi
done
