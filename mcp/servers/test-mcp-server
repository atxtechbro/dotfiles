#!/bin/bash

# Simple test MCP server that responds to the test_hello tool
# This is a minimal implementation for testing purposes

# Check if the first argument is "stdio"
# This is to match the behavior of the GitHub MCP server
if [ "$1" = "stdio" ] || [ -z "$1" ]; then
  # Process is running in stdio mode (default)
  echo "Test MCP server running in stdio mode" >&2
else
  echo "Usage: $0 [stdio]" >&2
  echo "Running in stdio mode by default" >&2
fi

# Read from stdin and write to stdout
while read -r line; do
  # Check if the line contains a JSON-RPC request
  if echo "$line" | grep -q "\"jsonrpc\":"; then
    # Extract the method and id
    method=$(echo "$line" | grep -o '"method":"[^"]*"' | cut -d'"' -f4)
    id=$(echo "$line" | grep -o '"id":[0-9]*' | cut -d':' -f2)
    
    # Log the request for debugging
    echo "Received request: method=$method, id=$id" >&2
    
    # Handle the initialize method
    if [ "$method" = "initialize" ]; then
      echo '{"jsonrpc":"2.0","id":'$id',"result":{"name":"test","version":"1.0.0","tools":[{"name":"test_hello","description":"A simple test tool that says hello","parameters":{"type":"object","properties":{"name":{"type":"string","description":"Name to greet"}},"required":["name"]}}]}}'
      echo "Sent initialize response" >&2
    
    # Handle the test_hello tool
    elif [ "$method" = "execute" ]; then
      # Extract the tool name and parameters
      tool=$(echo "$line" | grep -o '"name":"[^"]*"' | cut -d'"' -f4)
      echo "Tool requested: $tool" >&2
      
      if [ "$tool" = "test_hello" ]; then
        # Extract the name parameter
        name=$(echo "$line" | grep -o '"parameters":{[^}]*"name":"[^"]*"' | grep -o '"name":"[^"]*"' | cut -d'"' -f4)
        
        # If no name was found, use a default
        if [ -z "$name" ]; then
          name="World"
          echo "No name parameter found, using default: $name" >&2
        else
          echo "Name parameter found: $name" >&2
        fi
        
        # Return the greeting
        echo '{"jsonrpc":"2.0","id":'$id',"result":{"message":"Hello, '$name'!"}}'
        echo "Sent test_hello response for $name" >&2
      else
        # Unknown tool
        echo "Unknown tool: $tool" >&2
        echo '{"jsonrpc":"2.0","id":'$id',"error":{"code":-32601,"message":"Tool not found: '$tool'"}}'
      fi
    else
      # Unknown method
      echo "Unknown method: $method" >&2
      echo '{"jsonrpc":"2.0","id":'$id',"error":{"code":-32601,"message":"Method not found: '$method'"}}'
    fi
  else
    echo "Received non-JSON-RPC line: $line" >&2
  fi
done
