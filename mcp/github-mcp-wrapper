#!/bin/bash
# Wrapper script for GitHub MCP server using Docker with timeout

# Check if token is in environment
if [ -z "$GITHUB_PERSONAL_ACCESS_TOKEN" ]; then
  # Try to get from secrets file
  if [ -f "$HOME/.bash_secrets" ]; then
    if grep -q "GITHUB_PERSONAL_ACCESS_TOKEN=" "$HOME/.bash_secrets"; then
      export GITHUB_PERSONAL_ACCESS_TOKEN=$(grep "GITHUB_PERSONAL_ACCESS_TOKEN=" "$HOME/.bash_secrets" | cut -d '=' -f2 | tr -d '"')
    fi
  fi
  
  # If still no token, use placeholder for testing
  if [ -z "$GITHUB_PERSONAL_ACCESS_TOKEN" ]; then
    export GITHUB_PERSONAL_ACCESS_TOKEN="placeholder_for_testing"
    echo "Warning: Using placeholder token for testing. GitHub API calls will fail." >&2
  fi
fi

# Debug output
echo "Using GitHub token: ${GITHUB_PERSONAL_ACCESS_TOKEN:0:5}..." >&2

# Run the GitHub MCP server using Docker with a timeout
timeout 10s docker run -i --rm \
  -e GITHUB_PERSONAL_ACCESS_TOKEN="$GITHUB_PERSONAL_ACCESS_TOKEN" \
  ghcr.io/github/github-mcp-server stdio || {
    echo "Docker execution timed out or failed, falling back to Go implementation" >&2
    if [ -x "$HOME/mcp/github-mcp-server" ]; then
      exec "$HOME/mcp/github-mcp-server" stdio
    elif [ -x "$HOME/.local/bin/github-mcp-server" ]; then
      exec "$HOME/.local/bin/github-mcp-server" stdio
    else
      echo "Error: github-mcp-server not found" >&2
      exit 1
    fi
  }
