#!/bin/bash
# Wrapper script for GitHub MCP server using Docker only (no Go fallback)

# Check if token is in environment
if [ -z "$GITHUB_PERSONAL_ACCESS_TOKEN" ]; then
  # Try to get from secrets file
  if [ -f "$HOME/.bash_secrets" ]; then
    if grep -q "GITHUB_PERSONAL_ACCESS_TOKEN=" "$HOME/.bash_secrets"; then
      export GITHUB_PERSONAL_ACCESS_TOKEN=$(grep "GITHUB_PERSONAL_ACCESS_TOKEN=" "$HOME/.bash_secrets" | cut -d '=' -f2 | tr -d '"')
      echo "[$(date '+%H:%M:%S')] ✅ Found GitHub token in secrets file" >&2
    else
      echo "[$(date '+%H:%M:%S')] ⚠️  No GitHub token found in secrets file" >&2
    fi
  else
    echo "[$(date '+%H:%M:%S')] ⚠️  No .bash_secrets file found" >&2
  fi
  
  # If still no token, use placeholder for testing
  if [ -z "$GITHUB_PERSONAL_ACCESS_TOKEN" ]; then
    export GITHUB_PERSONAL_ACCESS_TOKEN="placeholder_for_testing"
    echo "[$(date '+%H:%M:%S')] ❌ Using placeholder token for testing. GitHub API calls will fail." >&2
  fi
fi

# Assert that the token starts with ghp_
if [[ ! "$GITHUB_PERSONAL_ACCESS_TOKEN" == ghp_* && "$GITHUB_PERSONAL_ACCESS_TOKEN" != "placeholder_for_testing" ]]; then
  echo "[$(date '+%H:%M:%S')] ❌ ERROR: GitHub token does not start with 'ghp_'. This is not a valid GitHub Personal Access Token." >&2
  echo "[$(date '+%H:%M:%S')] ⚠️  Please check your token format in .bash_secrets or environment variables." >&2
  echo "[$(date '+%H:%M:%S')] ℹ️  GitHub Personal Access Tokens should start with 'ghp_'." >&2
  exit 1
fi

# Debug output
echo "[$(date '+%H:%M:%S')] ℹ️  Using GitHub token: ${GITHUB_PERSONAL_ACCESS_TOKEN:0:5}..." >&2
echo "[$(date '+%H:%M:%S')] ℹ️  Starting Docker container for GitHub MCP server..." >&2

# Run the GitHub MCP server using Docker directly
exec docker run -i --rm \
  -e GITHUB_PERSONAL_ACCESS_TOKEN="$GITHUB_PERSONAL_ACCESS_TOKEN" \
  ghcr.io/github/github-mcp-server stdio
